@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-5">
    <div class="jumbotron bg-light p-5 shadow-sm">
        <div class="row">
            <div class="col-md-3">
                <img class="img-fluid rounded-2 top-0 end-0 " alt="Prompt Spark" src="~/dist/images/PromptSpark.webp">
            </div>
            <div class="col-md-6 align-text-top align-content-center">
                <p class="lead">A LLM prompt management and comparison tool.</p>
                <p>
                    <strong>Prompt Spark</strong> helps developers and businesses optimize the use of LLM models
                    by managing, tracking, and comparing system prompts efficiently.
                </p>
            </div>
            <div class="col-md-3">
                <a class="btn btn-primary btn-lg" href="/OpenAI/Chat/Index" role="button">Explore</a><br /><br />
                <a class="btn btn-primary btn-lg" href="/Home/learnmore" role="button">Prompt Spark Deep Dive</a>
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-md-4">
            <div class="card mb-4 bg-secondary-subtle shadow-sm">
                <div class="card-header">
                    Core Sparks
                </div>
                <div class="card-body">
                    <p class="lead">
                        Core Spark outlines the core behavior and output expectations for LLMs,
                        detailing the rigorous requirements and guidelines that ensure consistency
                        and quality across all interactions.
                    </p>
                </div>
                <div class="card-footer"></div>
            </div>
        </div>
        <div class="col-md-4 ">
            <div class="card bg-secondary-subtle mb-4 shadow-sm">
                <div class="card-header">Spark Variants</div>
                <div class="card-body">
                    <p class="lead">
                        A Spark Variant is an LLM implementation of a Core Spark,
                        designed to compare responses with variants of the same Core Spark.
                        This allows for in-depth testing and analysis of different variants.
                    </p>
                </div>
                <div class="card-footer"></div>
            </div>
        </div>
        <div class="col-md-4 ">
            <div class="card bg-secondary-subtle mb-4 shadow-sm">
                <div class="card-header">User Prompts</div>
                <div class="card-body">
                    <p class="lead">
                        A User Prompt is a collection of test inputs designed for a Core Spark.
                        They are systematically run against different Variants to assess
                        their effectiveness and adherence to the Core Spark specification.
                    </p>
                </div>
                <div class="card-footer"></div>

            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-lg-12">
            <section class="py-5">
                <div class="container">
                    <div class="card">
                        <div class="card-header">
                            <h2 class="mb-0">
                                <a class="btn btn-primary" href="/OpenAI/Chat/Details/Wichita">Wichita Core Spark</a>
                            </h2>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">Introduction to the Wichita Expert System</h5>
                            <p class="card-text">Explore the specialized range of user experiences designed to deliver expert knowledge about Wichita, Kansas. Tailored to various user preferences, these prompt variations offer a dynamic and informative interaction platform.</p>
                            <dl class="row">
                                <dt class="col-sm-3">Core Spark:</dt>
                                <dd class="col-sm-9">Wichita Expert System – This foundational template handles a broad spectrum of inquiries about Wichita's history, culture, and events, providing a comprehensive base for all subsequent interactions.</dd>

                                <dt class="col-sm-3">Spark Variants:</dt>
                                <dd class="col-sm-9">
                                    <ul>
                                        <li><strong>Wichita Wisdom</strong>: Provides straightforward, informative responses for users seeking knowledge about Wichita.</li>
                                        <li><strong>ICT Sarcasm</strong>: Delivers witty and sarcastic commentary, adding a playful tone to the interaction.</li>
                                        <li><strong>Wichita Pirate</strong>: Offers responses in a fun, pirate-themed dialect, making the exploration of Wichita engaging and adventurous.</li>
                                    </ul>
                                </dd>

                                <dt class="col-sm-3">User Engagements:</dt>
                                <dd class="col-sm-9">Users can query the system about various aspects of Wichita and receive responses that are tailored to the selected Spark Variant, ensuring both entertainment and informativeness.</dd>

                                <dt class="col-sm-3">Expected Outcomes:</dt>
                                <dd class="col-sm-9">Designed to meet specific user expectations with the appropriate tone and style, enhancing the overall user experience.</dd>
                            </dl>
                        </div>
                        <div class="card-footer text-muted">
                            The Wichita Core Spark is committed to continuous improvement through user feedback and system analysis, ensuring relevance and accuracy in every interaction.
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                <h2>What is Prompt Engineering?</h2>
            </div>
            <div class="card-body">
                <dl>
                    <dt>Definition</dt>
                    <dd>Prompt engineering is the process of crafting clear and precise instructions to guide AI systems in generating context-appropriate and relevant outputs. This technique is crucial in the development and optimization of AI applications such as co-pilots, chat bots, and digital assistants. By providing well-defined prompts, developers ensure that the AI produces responses that are syntactically correct, functionally accurate, and contextually appropriate.</dd>

                    <dt>The Importance of Prompt Engineering</dt>
                    <dd>
                        <p>Prompt engineering is the first major building block when working with Large Language Models (LLMs). It forms the foundation for creating intelligent and effective AI systems. In the context of co-pilots, chat bots, and digital assistants, prompt engineering is essential for several reasons:</p>
                        <div class="accordion" id="importanceAccordion">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingAccuracy">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAccuracy" aria-expanded="true" aria-controls="collapseAccuracy">
                                        Accuracy
                                    </button>
                                </h2>
                                <div id="collapseAccuracy" class="accordion-collapse collapse show" aria-labelledby="headingAccuracy" data-bs-parent="#importanceAccordion">
                                    <div class="accordion-body">
                                        Well-crafted prompts help ensure that the AI generates accurate and reliable outputs, reducing errors and enhancing the overall quality of interactions.
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingRelevance">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRelevance" aria-expanded="false" aria-controls="collapseRelevance">
                                        Relevance
                                    </button>
                                </h2>
                                <div id="collapseRelevance" class="accordion-collapse collapse" aria-labelledby="headingRelevance" data-bs-parent="#importanceAccordion">
                                    <div class="accordion-body">
                                        By providing context-specific instructions, prompt engineering ensures that the AI's responses are relevant to the user's needs and expectations.
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingEfficiency">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseEfficiency" aria-expanded="false" aria-controls="collapseEfficiency">
                                        Efficiency
                                    </button>
                                </h2>
                                <div id="collapseEfficiency" class="accordion-collapse collapse" aria-labelledby="headingEfficiency" data-bs-parent="#importanceAccordion">
                                    <div class="accordion-body">
                                        Clear and concise prompts lead to more efficient processing and faster response times, improving the user experience.
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingCustomization">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCustomization" aria-expanded="false" aria-controls="collapseCustomization">
                                        Customization
                                    </button>
                                </h2>
                                <div id="collapseCustomization" class="accordion-collapse collapse" aria-labelledby="headingCustomization" data-bs-parent="#importanceAccordion">
                                    <div class="accordion-body">
                                        Through iterative prompt engineering, developers can fine-tune AI systems to better align with specific use cases and user requirements.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </dd>

                    <dt>The Role of Iteration and Evaluation in Prompt Engineering</dt>
                    <dd>
                        <p>Creating effective prompts is not a one-time task; it requires continuous iteration and evaluation. This iterative process is essential for refining prompts and optimizing the AI's performance. Each iteration involves testing different prompt configurations, analyzing the outputs, and making adjustments to improve accuracy and relevance.</p>
                    </dd>

                    <dt>The Creation of PromptSpark</dt>
                    <dd>
                        <p>Recognizing the need for a structured approach to prompt engineering led to the creation of PromptSpark. PromptSpark is designed to streamline the process of crafting, testing, and optimizing prompts for LLMs. It integrates three main components:</p>
                        <div class="accordion" id="componentsAccordion">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingCoreSpec">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCoreSpec" aria-expanded="true" aria-controls="collapseCoreSpec">
                                        Core Spec
                                    </button>
                                </h2>
                                <div id="collapseCoreSpec" class="accordion-collapse collapse show" aria-labelledby="headingCoreSpec" data-bs-parent="#componentsAccordion">
                                    <div class="accordion-body">
                                        The foundational design specifications that outline the core behavior and output expectations for LLMs. Core Specs serve as the benchmark for evaluating AI performance.
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingSpecVariant">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSpecVariant" aria-expanded="false" aria-controls="collapseSpecVariant">
                                        Spec Variant
                                    </button>
                                </h2>
                                <div id="collapseSpecVariant" class="accordion-collapse collapse" aria-labelledby="headingSpecVariant" data-bs-parent="#componentsAccordion">
                                    <div class="accordion-body">
                                        Different implementations or adaptations of the Core Spec, allowing for experimentation with various prompt configurations. Spec Variants enable A/B testing and detailed comparisons to identify the most effective setups.
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingSpecInput">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSpecInput" aria-expanded="false" aria-controls="collapseSpecInput">
                                        Spec Input
                                    </button>
                                </h2>
                                <div id="collapseSpecInput" class="accordion-collapse collapse" aria-labelledby="headingSpecInput" data-bs-parent="#componentsAccordion">
                                    <div class="accordion-body">
                                        Specific prompts or test cases used to evaluate the performance of Spec Variants. Spec Inputs simulate real-world scenarios, providing the data needed for fine-tuning and optimization.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </dd>

                    <dt>How They Work Together</dt>
                    <dd>
                        <p>The synergy between Core Spec, Spec Variant, and Spec Input is what makes PromptSpark a powerful tool. The Core Spec sets the standard, Spec Variants offer diverse implementations to explore and improve, and Spec Inputs provide the means to test and validate each variant. This integrated approach ensures that your LLM projects are not only innovative but also reliable and effective.</p>
                    </dd>
                </dl>
            </div>
        </div>
    </div>



</div>
