@model string

@{
    ViewData["Title"] = "Using PivotTable.js in an ASP.NET MVC Application";
    ViewData["Description"] = "Learn how to integrate PivotTable.js into an ASP.NET MVC application for interactive data analysis and dynamic pivot table generation.";
    ViewData["Keywords"] = "PivotTable.js, ASP.NET MVC, Pivot Table, Interactive Data Analysis, JavaScript, Web Application";
}

@section Styles
{
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/pivottable/2.13.0/pivot.min.css">
    <style id="compiled-css" type="text/css">
        body {
            font-family: Verdana;
        }
    </style>
}

<div class="container mt-5">
    <!-- Header Section -->
    <div class="text-center mb-4">
        <h1 class="display-4 fw-bold text-primary">
            Analyze Your Data with DataSpark and PivotTable.js
        </h1>
        <div id="output"></div>
    </div>
</div>



<div class="container mt-4">
    <h1 class="mb-3">@ViewData["Title"]</h1>
    <p>@ViewData["Description"]</p>
    <h2>Overview</h2>
    <p>
        PivotTable.js is a powerful JavaScript library that enables users to create pivot tables directly in the browser.
        This example demonstrates how to integrate PivotTable.js into an ASP.NET MVC application, allowing for interactive data analysis
        with a dynamic pivot table rendered on a Razor view.
    </p>
</div>
<div class="container my-5">
    <header class="mb-4">
        <h1 class="display-4 text-center">@ViewData["Title"]</h1>
        <p class="lead text-center">@ViewData["Description"]</p>
    </header>

    <section class="mb-5">
        <h2>Overview</h2>
        <p>PivotTable.js is a powerful JavaScript library that allows you to create interactive pivot tables in your web applications. In this guide, we'll explore how to integrate PivotTable.js into a .Net 9 MVC application, leveraging MVC Controllers, Razor Pages, and Bootstrap 5 for UI enhancements.</p>
    </section>

    <section class="mb-5">
        <h2>Setting Up Your .Net 9 MVC Project</h2>
        <p>Start by creating a new .Net 9 MVC project in Visual Studio. Ensure you have the latest version of .Net 9 installed. Use the following command in your terminal:</p>
        <pre class="language-csharp">
        <code class="language-csharp">
dotnet new mvc -n PivotTableDemo
              </code>
            </pre>
        <p>Once your project is set up, open the <code>Startup.cs</code> file to configure the services and middleware.</p>
    </section>

    <section class="mb-5">
        <h2>Adding PivotTable.js to Your Project</h2>
        <p>Include PivotTable.js in your project by adding its CSS and JavaScript files. You can use a CDN link for simplicity:</p>
        <pre class="language-html">
        <code class="language-html">
&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/pivottable/2.23.0/pivot.min.css" rel="stylesheet"&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/pivottable/2.23.0/pivot.min.js"&gt;&lt;/script&gt;
              </code>
            </pre>
        <p>Add these links to your <code>_Layout.cshtml</code> file under the <code>&lt;head&gt;</code> section.</p>
    </section>

    <section class="mb-5">
        <h2>Creating the Pivot Table View</h2>
        <p>In your MVC project, create a new View named <code>PivotTable.cshtml</code>. Use Bootstrap's grid system to layout the pivot table interface:</p>
        <pre class="language-html">
        <code class="language-html">
                @{
                    ViewData["Title"] = "Pivot Table Example";
                }
&lt;div class="container"&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-12"&gt;
            &lt;h2&gt;Pivot Table Example&lt;/h2&gt;
            &lt;div id="pivot-output" class="mt-3"&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(function () {
        $("#pivot-output").pivotUI([
            {name: "John", age: 30, gender: "Male"},
            {name: "Jane", age: 25, gender: "Female"},
            {name: "Doe", age: 35, gender: "Male"}
        ], {
            rows: ["gender"],
            cols: ["age"]
        });
    });
&lt;/script&gt;
              </code>
            </pre>
    </section>

    <section class="mb-5">
        <h2>Handling Data in MVC Controllers</h2>
        <p>Create an API endpoint in your MVC Controller to handle data requests. Here is an example controller action that returns data in JSON format:</p>
        <pre class="language-csharp">
        <code class="language-csharp">
public class PivotController : Controller
{
    [HttpGet]
    public JsonResult GetData()
    {
        var data = new[]
        {
            new { Name = "John", Age = 30, Gender = "Male" },
            new { Name = "Jane", Age = 25, Gender = "Female" },
            new { Name = "Doe", Age = 35, Gender = "Male" }
        };
        return Json(data);
    }
}
              </code>
            </pre>
    </section>

    <section class="mb-5">
        <h2>Integrating Bootstrap 5 UI Elements</h2>
        <p>Enhance the user interface using Bootstrap 5 components like cards, buttons, and modals. Below is an example of wrapping the pivot table in a Bootstrap card:</p>
        <pre class="language-html">
        <code class="language-html">
&lt;div class="card"&gt;
    &lt;div class="card-header"&gt;Pivot Table Visualization&lt;/div&gt;
    &lt;div class="card-body"&gt;
        &lt;div id="pivot-output"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
              </code>
            </pre>
    </section>

    <section class="mb-5">
        <h2>Final Thoughts</h2>
        <p>Implementing PivotTable.js in a .Net 9 MVC application can significantly enhance your data visualization capabilities. By combining PivotTable.js with Bootstrap 5, you can create interactive and visually appealing data representations that are easy to navigate and interpret.</p>
    </section>

    <footer class="text-center mt-5">
        <p class="text-muted">&copy; 2024 - PivotTable.js Implementation Guide</p>
    </footer>
</div>

@section PageScripts
{
    <script type="text/javascript">
        $(document).ready(function() {
            // Fetch data from the /categorization/pivot/data endpoint using the model variable as the filename
            var filename = '@Model'; // Use the model string as the filename

            $.ajax({
                url: '/pivottable/getexistingfile/' + filename,
                method: 'GET',
                dataType: 'json',
                success: function(data) {
                    // Create a dictionary of all renderers including Plotly renderers
                    var renderers = $.extend($.pivotUtilities.renderers, $.pivotUtilities.plotly_renderers);

                    $("#output").pivotUI(data);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error("Error fetching data: ", textStatus, errorThrown);
                }
            });
        });
    </script>
}

@section Scripts
{
    <script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pivottable/2.13.0/pivot.min.js"></script>
    <script type="text/javascript" src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pivottable/2.23.0/plotly_renderers.min.js"></script>
    <script id="insert"></script>
}

