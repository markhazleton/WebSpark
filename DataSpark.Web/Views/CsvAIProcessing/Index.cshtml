@{
    ViewData["Title"] = "CSV AI Analysis";
    var uploadedFiles = ViewBag.UploadedFiles as IReadOnlyList<DataSpark.Web.Services.UploadedCsvFile> ?? new
    List<DataSpark.Web.Services.UploadedCsvFile>();
    var availableFiles = ViewBag.AvailableFiles as List<string> ?? new List<string>();
    var selectedFile = ViewBag.SelectedFile as string ?? "";
    var errorMessage = ViewBag.ErrorMessage as string ?? "";
}

<h2>CSV AI Analysis</h2>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-warning">
        <strong>No CSV Files Available:</strong> @errorMessage
        <br />
        <small>Please upload CSV files through other parts of the application first.</small>
    </div>
}
else
{
    <!-- File Selection Section -->
    <div class="card mb-4">
        <div class="card-header">
            <h4>Select CSV File for Analysis</h4>
        </div>
        <div class="card-body">
            <form method="get" asp-action="Index" asp-controller="CsvAIProcessing">
                <div class="form-group mb-3">
                    <label for="fileName" class="form-label">Choose CSV File:</label>
                    <select class="form-select" id="fileName" name="fileName" onchange="this.form.submit()">
                        <option value="">-- Select a file --</option>
                        @foreach (var file in availableFiles)
                        {
                            <option value="@file" selected="@(file == selectedFile)">@file</option>
                        }
                    </select>
                </div>
            </form>

            @if (!string.IsNullOrEmpty(selectedFile))
            {
                <!-- Analysis Actions for Selected File -->
                <div class="mt-3">
                    <form asp-controller="CsvAIProcessing" asp-action="AnalyzeFile" method="post">
                        <input type="hidden" name="fileName" value="@selectedFile" />
                        <div class="form-group mb-3">
                            <label for="customPrompt">Custom Analysis Prompt (optional):</label>
                            <textarea name="customPrompt" id="customPrompt" class="form-control" rows="3"
                        placeholder="Enter custom prompt or leave empty for default analysis..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-chart-bar"></i> Analyze Selected File
                        </button>
                    </form>

                    <form asp-controller="CsvAIProcessing" asp-action="UploadAndRegisterFile" method="post"
                        class="d-inline ms-2">
                        <input type="hidden" name="fileName" value="@selectedFile" />
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-upload"></i> Upload to AI for Future Use
                        </button>
                    </form>
                </div>
            }

            <!-- Diagnostic Button -->
            <div class="mt-3">
                <form asp-controller="CsvAIProcessing" asp-action="RunDiagnostics" method="post">
                    <button type="submit" class="btn btn-info btn-sm">
                        <i class="fas fa-stethoscope"></i> Run Diagnostics
                    </button>
                    <small class="form-text text-muted">Check OpenAI configuration and troubleshoot issues</small>
                </form>
            </div>
        </div>
    </div>
}

<!-- Uploaded Files Management -->
@if (uploadedFiles.Any())
{
    <div class="card mb-4">
        <div class="card-header">
            <h4>Uploaded Files (@uploadedFiles.Count files)</h4>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Select</th>
                            <th>File Name</th>
                            <th>Upload Date</th>
                            <th>Size</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var file in uploadedFiles)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" class="file-checkbox" value="@file.FileId" />
                                </td>
                                <td>@file.FileName</td>
                                <td>@file.UploadedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@((file.FileSizeBytes / 1024.0).ToString("F1")) KB</td>
                                <td>
                                    <form asp-controller="CsvAIProcessing" asp-action="RemoveFile" method="post"
                                        style="display: inline;">
                                        <input type="hidden" name="fileId" value="@file.FileId" />
                                        <button type="submit" class="btn btn-sm btn-danger"
                                            onclick="return confirm('Are you sure you want to remove this file?')">Remove</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Analysis Actions -->
            <div class="mt-3">
                <form asp-controller="CsvAIProcessing" asp-action="AnalyzeUploadedFiles" method="post"
                    id="analyzeSelectedForm">
                    <div class="form-group mb-3">
                        <label for="customPrompt">Custom Analysis Prompt (optional):</label>
                        <textarea name="customPrompt" id="customPrompt" class="form-control" rows="3"
                        placeholder="Enter custom prompt or leave empty for default analysis..."></textarea>
                    </div>
                    <button type="button" class="btn btn-success" onclick="analyzeSelected()">Analyze Selected
                        Files</button>
                </form>

                <form asp-controller="CsvAIProcessing" asp-action="AnalyzeAllFiles" method="post" class="d-inline">
                    <input type="hidden" name="customPrompt" id="allFilesPrompt" />
                    <button type="button" class="btn btn-info" onclick="analyzeAll()">Analyze All Files</button>
                </form>

                <form asp-controller="CsvAIProcessing" asp-action="ClearAllFiles" method="post" class="d-inline">
                    <button type="submit" class="btn btn-warning"
                        onclick="return confirm('Are you sure you want to clear all uploaded files?')">Clear All
                        Files</button>
                </form>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-info">
        <strong>No files uploaded yet.</strong> Upload CSV files and choose to keep them for future analysis to see them
        listed here.
    </div>
}

<!-- Analysis Results -->
@if (ViewBag.Analysis != null)
{
    <div class="card">
        <div class="card-header">
            <h4>AI Analysis Result</h4>
        </div>
        <div class="card-body">
            <pre
                style="white-space: pre-wrap; background-color: #f8f9fa; padding: 15px; border-radius: 5px;">@ViewBag.Analysis</pre>
        </div>
    </div>
}

<script>
    function analyzeSelected()
    {
        const checkboxes = document.querySelectorAll('.file-checkbox:checked');
        const form = document.getElementById('analyzeSelectedForm');

        // Remove existing hidden inputs
        const existingInputs = form.querySelectorAll('input[name="selectedFileIds"]');
        existingInputs.forEach(input => input.remove());

        if (checkboxes.length === 0)
        {
            alert('Please select at least one file to analyze.');
            return;
        }

        // Add hidden inputs for selected file IDs
        checkboxes.forEach(checkbox =>
        {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'selectedFileIds';
            input.value = checkbox.value;
            form.appendChild(input);
        });

        form.submit();
    }

    function analyzeAll()
    {
        const customPrompt = document.getElementById('customPrompt').value;
        document.getElementById('allFilesPrompt').value = customPrompt;

        const form = document.querySelector('form[asp-action="AnalyzeAllFiles"]');
        form.submit();
    }

    // Select all functionality
    function toggleAllFiles()
    {
        const checkboxes = document.querySelectorAll('.file-checkbox');
        const selectAllCheckbox = document.getElementById('selectAll');
        checkboxes.forEach(checkbox => checkbox.checked = selectAllCheckbox.checked);
    }
</script>

   
   
               
   
       
       
   
   