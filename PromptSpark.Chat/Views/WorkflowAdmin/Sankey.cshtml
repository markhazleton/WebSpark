@{
    ViewData["Title"] = "Workflow Sankey Diagram";
    var sankeyData = (string)ViewData["SankeyData"]; // JSON data passed from the controller
}
<h2>Workflow Sankey Diagram</h2>

<!-- Container for the Sankey diagram -->
<div id="sankey-container"></div>

<!-- D3.js and D3-Sankey CDN -->
<script src="https://d3js.org/d3.v6.min.js"></script>
<script src="https://unpkg.com/d3-sankey@0.12.3/dist/d3-sankey.min.js"></script>

<script>
    // Parse the JSON data passed from the controller for the Sankey diagram
    const data = JSON.parse(`@Html.Raw(sankeyData)`);

    console.log("Sankey Data for Debugging:", data); // Output to console for additional debugging

    // Dimensions for the SVG container
    const width = 800;
    const height = 600;

    // Create the SVG container for the Sankey diagram
    const svg = d3.select("#sankey-container")
                  .append("svg")
                  .attr("width", width)
                  .attr("height", height);

    // Set up the Sankey generator with node width and padding
    const sankey = d3.sankey()
                     .nodeWidth(20)
                     .nodePadding(15)
                     .extent([[1, 1], [width - 1, height - 6]]);

    // Prepare the data for Sankey rendering
    const graph = sankey({
        nodes: data.nodes.map(d => Object.assign({}, d)),
        links: data.links.map(d => Object.assign({}, d))
    });

    // Add links to the Sankey diagram
    svg.append("g")
       .selectAll("path")
       .data(graph.links)
       .enter()
       .append("path")
       .attr("d", d3.sankeyLinkHorizontal())
       .attr("stroke-width", d => Math.max(1, d.width))
       .style("fill", "none")
       .style("stroke", "#69b3a2")
       .style("opacity", 0.7);

    // Add nodes to the Sankey diagram
    const node = svg.append("g")
                    .selectAll("g")
                    .data(graph.nodes)
                    .enter()
                    .append("g");

    node.append("rect")
        .attr("x", d => d.x0)
        .attr("y", d => d.y0)
        .attr("height", d => d.y1 - d.y0)
        .attr("width", sankey.nodeWidth())
        .attr("fill", "#1f77b4");

    // Add labels for nodes (question text)
    node.append("text")
        .attr("x", d => d.x0 - 6)
        .attr("y", d => (d.y1 + d.y0) / 2)
        .attr("dy", "0.35em")
        .attr("text-anchor", "end")
        .text(d => d.name)
        .style("font-size", "10px")
        .style("fill", "#000")
        .filter(d => d.x0 < width / 2)
        .attr("x", d => d.x1 + 6)
        .attr("text-anchor", "start");
</script>
