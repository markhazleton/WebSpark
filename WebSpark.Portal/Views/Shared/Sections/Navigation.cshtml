@using System.IO
@using System.Text.Json
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Environment
@{
    var areaName = ViewContext.RouteData.Values["area"]?.ToString() ?? "";
    var currentPath =
    $"/{ViewContext.RouteData.Values["area"]}/{ViewContext.RouteData.Values["controller"]}/{ViewContext.RouteData.Values["action"]}";
    var currentArea = $"/{ViewContext.RouteData.Values["area"]}";

    // Fully qualified System.IO.Path.Combine to avoid ambiguity
    var jsonFile = !string.IsNullOrEmpty(areaName)
    ? System.IO.Path.Combine(Environment.ContentRootPath, "Areas", areaName, "Views", "Shared", "navigation.json")
    : System.IO.Path.Combine(Environment.ContentRootPath, "Views", "Shared", "navigation.json");

    JsonDocument menuItems = null;
    if (File.Exists(jsonFile))
    {
        try
        {
            string json = File.ReadAllText(jsonFile);
            menuItems = JsonDocument.Parse(json);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading JSON: {ex.Message}");
        }
    }
}

<!-- Top Navigation (When NOT in an Area) -->
@if (string.IsNullOrEmpty(areaName))
{
    <nav class="navbar navbar-expand-lg shadow-sm fixed-top mb-4">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">WebSpark</a>

            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#mobileNav"
                aria-controls="mobileNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="mainNavbar">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/PromptSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                            href="/PromptSpark">PromptSpark</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/AsyncSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                            href="/AsyncSpark">AsyncSpark</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/DataSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                            href="/DataSpark">DataSpark</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/TriviaSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                            href="/TriviaSpark">TriviaSpark</a>
                    </li>
                    <li class="nav-item ms-lg-2">
                        <button class="btn btn-sm btn-outline-secondary rounded-pill theme-toggle" aria-label="Toggle theme"
                            title="Toggle light/dark mode">
                            <i class="bi bi-moon-fill theme-toggle-dark-icon"></i>
                            <i class="bi bi-sun-fill theme-toggle-light-icon d-none"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Spacer for fixed navbar -->
    <div class="pt-5 mt-4"></div>
}

<!-- Area Navigation (When Inside an Area) -->
@if (!string.IsNullOrEmpty(areaName) && menuItems != null)
{
    <nav class="navbar navbar-expand-lg bg-secondary sticky-top shadow-sm">
        <div class="container-fluid">
            <a class="navbar-brand me-2 text-light" href="/">
                <i class="bi bi-house-door"></i><span class="d-none d-sm-inline ms-1">Home</span>
            </a>

            <a class="navbar-brand text-light" href="@currentArea">
                <i class="bi bi-folder"></i><span class="ms-1">@areaName</span>
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#areaNavCanvas"
                aria-controls="areaNavCanvas" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="areaNav">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    @foreach (var item in menuItems.RootElement.GetProperty("menuItems").EnumerateArray())
                    {
                        string role = item.TryGetProperty("role", out var roleElement) ? roleElement.GetString() : "anonymous";
                        var url = item.GetProperty("url").GetString().ToLower();
                        var text = item.GetProperty("text").GetString();
                        var isActive = currentPath.StartsWith(url, StringComparison.OrdinalIgnoreCase);

                        if ((role == "admin" && User.Identity.IsAuthenticated) || role == "anonymous")
                        {
                            <li class="nav-item">
                                <a class="nav-link text-light @(isActive ? "active" : "")" href="@url">@text</a>
                            </li>
                        }
                    }
                    <li class="nav-item ms-lg-2">
                        <button class="btn btn-sm btn-outline-light rounded-pill theme-toggle" aria-label="Toggle theme"
                            title="Toggle light/dark mode">
                            <i class="bi bi-moon-fill theme-toggle-dark-icon"></i>
                            <i class="bi bi-sun-fill theme-toggle-light-icon d-none"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
}

<!-- Mobile Offcanvas Navigation -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="mobileNav" aria-labelledby="mobileNavLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="mobileNavLabel">Navigation</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/PromptSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                    href="/PromptSpark">PromptSpark</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/AsyncSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                    href="/AsyncSpark">AsyncSpark</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/DataSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                    href="/DataSpark">DataSpark</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/TriviaSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "")"
                    href="/TriviaSpark">TriviaSpark</a>
            </li>
            <li class="nav-item mt-3">
                <div class="d-grid">
                    <button class="btn btn-outline-secondary theme-toggle" aria-label="Toggle theme">
                        <i class="bi bi-moon-fill theme-toggle-dark-icon me-2"></i>
                        <i class="bi bi-sun-fill theme-toggle-light-icon me-2 d-none"></i>
                        Toggle light/dark mode
                    </button>
                </div>
            </li>
        </ul>
    </div>
</div>

<!-- Area Navigation Offcanvas (For Mobile) -->
@if (!string.IsNullOrEmpty(areaName) && menuItems != null)
{
    <div class="offcanvas offcanvas-start" tabindex="-1" id="areaNavCanvas" aria-labelledby="areaNavCanvasLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="areaNavCanvasLabel">@areaName Navigation</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <ul class="navbar-nav">
                @foreach (var item in menuItems.RootElement.GetProperty("menuItems").EnumerateArray())
                {
                    string role = item.TryGetProperty("role", out var roleElement) ? roleElement.GetString() : "anonymous";
                    var url = item.GetProperty("url").GetString().ToLower();
                    var text = item.GetProperty("text").GetString();
                    var isActive = currentPath.StartsWith(url, StringComparison.OrdinalIgnoreCase);

                    if ((role == "admin" && User.Identity.IsAuthenticated) || role == "anonymous")
                    {
                        <li class="nav-item">
                            <a class="nav-link @(isActive ? "active" : "")" href="@url">@text</a>
                        </li>
                    }
                }
                <li class="nav-item mt-3">
                    <div class="d-grid">
                        <button class="btn btn-outline-secondary theme-toggle" aria-label="Toggle theme">
                            <i class="bi bi-moon-fill theme-toggle-dark-icon me-2"></i>
                            <i class="bi bi-sun-fill theme-toggle-light-icon me-2 d-none"></i>
                            Toggle light/dark mode
                        </button>
                    </div>
                </li>
            </ul>
        </div>
    </div>
}

<!-- Custom styles for navbars in dark mode -->
<style>
    /* Default navbar styles in light mode */
    .navbar:not(.bg-secondary) {
        background-color: var(--bs-body-bg);
    }

    /* Custom background for secondary navbar in dark mode */
    [data-bs-theme="dark"] .navbar.bg-secondary {
        background-color: #343a40 !important;
    }

    /* Ensure the navbar toggler icon is visible in dark mode */
    [data-bs-theme="dark"] .navbar-toggler-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
    }

    /* Ensure offcanvas has appropriate background in dark mode */
    [data-bs-theme="dark"] .offcanvas {
        background-color: #212529;
        color: #dee2e6;
    }

    /* Make sure active links are properly highlighted */
    [data-bs-theme="dark"] .nav-link.active {
        color: #fff !important;
        font-weight: 500;
    }
</style>
