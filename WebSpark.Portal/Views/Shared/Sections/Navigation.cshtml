@using System.IO
@using System.Text.Json
@using WebSpark.Bootswatch.Services
@using WebSpark.Bootswatch.Helpers
@inject WebSpark.Bootswatch.Services.StyleCache StyleCache
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Environment
@{
    var themeName = WebSpark.Bootswatch.Helpers.BootswatchThemeHelper.GetCurrentThemeName(ViewContext.HttpContext);
    var themeUrl = WebSpark.Bootswatch.Helpers.BootswatchThemeHelper.GetThemeUrl(StyleCache, themeName);
    var areaName = ViewContext.RouteData.Values["area"]?.ToString() ?? "";
    var currentPath =
    $"/{ViewContext.RouteData.Values["area"]}/{ViewContext.RouteData.Values["controller"]}/{ViewContext.RouteData.Values["action"]}";
    var currentArea = $"/{ViewContext.RouteData.Values["area"]}";

    // Fully qualified System.IO.Path.Combine to avoid ambiguity
    var jsonFile = !string.IsNullOrEmpty(areaName)
    ? System.IO.Path.Combine(Environment.ContentRootPath, "Areas", areaName, "Views", "Shared", "navigation.json")
    : System.IO.Path.Combine(Environment.ContentRootPath, "Views", "Shared", "navigation.json");

    JsonDocument? menuItems = null;
    if (File.Exists(jsonFile))
    {
        try
        {
            string json = File.ReadAllText(jsonFile);
            menuItems = JsonDocument.Parse(json);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading JSON: {ex.Message}");
        }
    }
}

<!-- Top Navigation (When NOT in an Area) -->
@if (string.IsNullOrEmpty(areaName))
{
    <nav class="navbar navbar-expand-lg bg-body-tertiary shadow-sm fixed-top mb-4" data-bs-theme="auto">
        <div class="container-fluid">
            <a class="navbar-brand d-flex align-items-center gap-2" href="/">
                <i class="bi bi-lightning-charge-fill fs-4 text-primary"></i>
                <span class="fw-bold">WebSpark</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#mobileNav"
                aria-controls="mobileNav" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="mainNavbar">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/PromptSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                            href="/PromptSpark">
                            <i class="bi bi-lightbulb"></i>PromptSpark
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/AsyncSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                            href="/AsyncSpark">
                            <i class="bi bi-arrow-repeat"></i>AsyncSpark
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/GitHubSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                            href="/GitHubSpark">
                            <i class="bi bi-github"></i>GitHubSpark
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/DataSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                            href="/DataSpark">
                            <i class="bi bi-bar-chart"></i>DataSpark
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(currentPath.StartsWith("/TriviaSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                            href="/TriviaSpark">
                            <i class="bi bi-question-circle"></i>TriviaSpark
                        </a>
                    </li>
                    <li class="nav-item ms-lg-2">
                        <button
                            class="btn btn-sm btn-outline-primary rounded-pill theme-toggle d-flex align-items-center gap-2"
                            aria-label="Toggle theme" title="Toggle light/dark mode">
                            <i class="bi bi-moon-fill theme-toggle-dark-icon"></i>
                            <i class="bi bi-sun-fill theme-toggle-light-icon d-none"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="pt-5 mt-4"></div>
}

<!-- Area Navigation (When Inside an Area) -->
@if (!string.IsNullOrEmpty(areaName) && menuItems != null)
{
    <nav class="navbar navbar-expand-lg bg-secondary sticky-top shadow-sm" data-bs-theme="auto">
        <div class="container-fluid">
            <a class="navbar-brand me-2 d-flex align-items-center gap-2 text-light" href="/">
                <i class="bi bi-house-door"></i><span class="d-none d-sm-inline">Home</span>
            </a>
            <a class="navbar-brand d-flex align-items-center gap-2 text-light" href="@currentArea">
                <i class="bi bi-folder"></i><span>@areaName</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#areaNavCanvas"
                aria-controls="areaNavCanvas" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="areaNav">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    @foreach (var item in menuItems.RootElement.GetProperty("menuItems").EnumerateArray())
                    {
                        string role = item.TryGetProperty("role", out var roleElement) ? roleElement.GetString() ?? "anonymous"
                        : "anonymous";
                        string url = item.TryGetProperty("url", out var urlElement) ? urlElement.GetString() ?? string.Empty :
                        string.Empty;
                        string text = item.TryGetProperty("text", out var textElement) ? textElement.GetString() ?? string.Empty
                        : string.Empty;
                        var isActive = !string.IsNullOrEmpty(url) && currentPath.StartsWith(url,
                        StringComparison.OrdinalIgnoreCase);
                        if ((role == "admin" && User?.Identity != null && User.Identity.IsAuthenticated) || role == "anonymous")
                        {
                            <li class="nav-item">
                                <a class="nav-link d-flex align-items-center gap-1 text-light @(isActive ? "active" : "")"
                                    href="@url">
                                    <i class="bi bi-dot"></i>@text
                                </a>
                            </li>
                        }
                    }
                    <li class="nav-item ms-lg-2">
                        <button
                            class="btn btn-sm btn-outline-light rounded-pill theme-toggle d-flex align-items-center gap-2"
                            aria-label="Toggle theme" title="Toggle light/dark mode">
                            <i class="bi bi-moon-fill theme-toggle-dark-icon"></i>
                            <i class="bi bi-sun-fill theme-toggle-light-icon d-none"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
}

<!-- Mobile Offcanvas Navigation -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="mobileNav" aria-labelledby="mobileNavLabel"
    data-bs-theme="auto">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="mobileNavLabel">Navigation</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/PromptSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                    href="/PromptSpark">
                    <i class="bi bi-lightbulb"></i>PromptSpark
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/AsyncSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                    href="/AsyncSpark">
                    <i class="bi bi-arrow-repeat"></i>AsyncSpark
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/GitHubSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                    href="/GitHubSpark">
                    <i class="bi bi-github"></i>GitHubSpark
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/DataSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                    href="/DataSpark">
                    <i class="bi bi-bar-chart"></i>DataSpark
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentPath.StartsWith("/TriviaSpark", StringComparison.OrdinalIgnoreCase) ? "active" : "") d-flex align-items-center gap-1"
                    href="/TriviaSpark">
                    <i class="bi bi-question-circle"></i>TriviaSpark
                </a>
            </li>
            <li class="nav-item mt-3">
                <div class="d-grid">
                    <button class="btn btn-outline-primary theme-toggle d-flex align-items-center gap-2"
                        aria-label="Toggle theme">
                        <i class="bi bi-moon-fill theme-toggle-dark-icon"></i>
                        <i class="bi bi-sun-fill theme-toggle-light-icon d-none"></i>
                        Toggle light/dark mode
                    </button>
                </div>
            </li>
        </ul>
    </div>
</div>

<!-- Area Navigation Offcanvas (For Mobile) -->
@if (!string.IsNullOrEmpty(areaName) && menuItems != null)
{
    <div class="offcanvas offcanvas-start" tabindex="-1" id="areaNavCanvas" aria-labelledby="areaNavCanvasLabel"
        data-bs-theme="auto">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="areaNavCanvasLabel">@areaName Navigation</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <ul class="navbar-nav">
                @foreach (var item in menuItems.RootElement.GetProperty("menuItems").EnumerateArray())
                {
                    string role = item.TryGetProperty("role", out var roleElement) ? roleElement.GetString() ?? "anonymous" :
                    "anonymous";
                    string url = item.TryGetProperty("url", out var urlElement) ? urlElement.GetString() ?? string.Empty :
                    string.Empty;
                    string text = item.TryGetProperty("text", out var textElement) ? textElement.GetString() ?? string.Empty :
                    string.Empty;
                    var isActive = !string.IsNullOrEmpty(url) && currentPath.StartsWith(url,
                    StringComparison.OrdinalIgnoreCase);
                    if ((role == "admin" && User?.Identity != null && User.Identity.IsAuthenticated) || role == "anonymous")
                    {
                        <li class="nav-item">
                            <a class="nav-link d-flex align-items-center gap-1 @(isActive ? "active" : "")" href="@url">
                                <i class="bi bi-dot"></i>@text
                            </a>
                        </li>
                    }
                }
                <li class="nav-item mt-3">
                    <div class="d-grid">
                        <button class="btn btn-outline-light theme-toggle d-flex align-items-center gap-2"
                            aria-label="Toggle theme">
                            <i class="bi bi-moon-fill theme-toggle-dark-icon"></i>
                            <i class="bi bi-sun-fill theme-toggle-light-icon d-none"></i>
                            Toggle light/dark mode
                        </button>
                    </div>
                </li>
            </ul>
        </div>
    </div>
}

<!-- Custom styles for navbars in dark mode -->
<style>
    /* Default navbar styles in light mode */
    .navbar:not(.bg-secondary) {
        background-color: var(--bs-body-bg);
    }

    /* Custom background for secondary navbar in dark mode */
    [data-bs-theme="dark"] .navbar.bg-secondary {
        background-color: #343a40 !important;
    }

    /* Ensure the navbar toggler icon is visible in dark mode */
    [data-bs-theme="dark"] .navbar-toggler-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
    }

    /* Ensure offcanvas has appropriate background in dark mode */
    [data-bs-theme="dark"] .offcanvas {
        background-color: #212529;
        color: #dee2e6;
    }

    /* Make sure active links are properly highlighted */
    [data-bs-theme="dark"] .nav-link.active {
        color: #fff !important;
        font-weight: 500;
    }

    /* Icon color adjustments for dark mode */
    [data-bs-theme="dark"] .navbar .bi,
    [data-bs-theme="dark"] .offcanvas .bi {
        color: #f8f9fa;
    }

    [data-bs-theme="light"] .navbar .bi,
    [data-bs-theme="light"] .offcanvas .bi {
        color: #212529;
    }
</style>






