@using PromptSpark.Domain.Models
@model DefinitionTypeDto

@{
    ViewData["Title"] = "Core Spark";
    var definitionType = Model.DefinitionType;
    var userPrompt = Model.Prompts.FirstOrDefault(w => w.UserPromptId == Model.CurrentUserPromptId);
}

<span class="badge rounded-pill bg-primary">Core Spark (@Model.DefinitionType)</span>
<div class="row">
    <div class="col-8">
        <h1>@Model.DefinitionType</h1>
        <p>@Model.Description</p>
    </div>
    <div class="col-4">
        <a class="btn btn-secondary" asp-action="Index">Back to Core Sparks</a>
    </div>
</div>

@if (Model.CurrentUserPromptId == 0)
{
    <span class="badge rounded-pill bg-primary">User Prompts for the Core Spark (@Model.DefinitionType)</span>
    <ul class="list-group">
        @foreach (var item in Model.Prompts)
        {
            var displayText = item.UserPrompt.Length > 120 ? item.UserPrompt.Substring(0, 120) + "..." : item.UserPrompt;

            <li class="list-group-item">
                <a href="/PromptSpark/Chat/Details/@definitionType?UserPromptId=@item.UserPromptId" class="text-decoration-none">
                    @displayText
                </a>
            </li>
        }
    </ul>

    
}
else
{
    @await Html.PartialAsync("_UserPromptDetail", userPrompt)
}


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, { html: true })
            });
            var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
            var popoverList = popoverTriggerList.map(function(popoverTriggerEl) {
                return new bootstrap.Popover(popoverTriggerEl);
            });
        });
    </script>
}
