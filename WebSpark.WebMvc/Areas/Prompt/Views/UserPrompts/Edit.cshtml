@model             UserPromptDto

@{
    ViewData["Title"] = "Edit User Prompt";
}
<form asp-action="Edit">
    <div class="row">
        <div class="col-8">
            <h1>Edit User Prompt: @Model.Id </h1>

        </div>
        <div class="col-4">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a class="btn btn-secondary" asp-action="Index">Back to List</a>
        </div>
    </div>

    <hr />
    <div class="row">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="DefinitionType" class="control-label"></label>
                <select asp-for="DefinitionType" class="form-control" asp-items="@(new SelectList(Model.DefinitionTypes, Model.DefinitionType))"></select>
                <span asp-validation-for="DefinitionType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserPrompt" class="control-label"></label>
                <textarea asp-for="UserPrompt" class="form-control" rows="5"></textarea>
                <span asp-validation-for="UserPrompt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserExpectedResponse" class="control-label"></label>
                <textarea asp-for="UserExpectedResponse" class="form-control" rows="5"></textarea>
                <span asp-validation-for="UserExpectedResponse" class="text-danger"></span>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
