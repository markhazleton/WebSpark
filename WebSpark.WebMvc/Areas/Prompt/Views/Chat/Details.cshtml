@model             DefinitionTypeDto

@{
    ViewData["Title"] = "Core Spark";
    int SelectedPromptId = Model.Prompts.Select(s=>s.UserPromptId).FirstOrDefault();
}
<span class="badge rounded-pill bg-primary">Core Spark (@Model.DefinitionType)</span>
<div class="row">
    <div class="col-8">
        <h1>@Model.DefinitionType</h1>
        <p>@Model.Description</p>
    </div>
    <div class="col-4">
        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
    </div>
</div>
<span class="badge rounded-pill bg-primary">Select User Prompt for the Core Spark (@Model.DefinitionType) To View Responses</span>
<select id="chatDropdown" class="form-control">
    @foreach (var item in Model.Prompts)
    {
        if (!string.IsNullOrEmpty(item.UserPrompt))
        {
            if (item.UserPromptId == SelectedPromptId)
            {
                <option value="@item.UserPrompt" selected>@Html.DisplayFor(modelItem => item.UserPrompt)</option>
            }
            else
            {
                <option value="@item.UserPrompt">@Html.DisplayFor(modelItem => item.UserPrompt)</option>
            }
        }
    }
</select>
<hr />

<div id="chatDetails"></div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, { html: true })
            });
            var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
            var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
                return new bootstrap.Popover(popoverTriggerEl);
            });
            var dropdown = document.getElementById('chatDropdown');
            dropdown.addEventListener('change', function () {
                var selectedPrompt = this.value;
                if (selectedPrompt) {
                    fetch('@Url.Action("GetChatDetails", "Chat")?id=' + encodeURIComponent(selectedPrompt))
                        .then(response => response.text())
                        .then(html => {
                            // Set the innerHTML of the chatDetails container to the fetched HTML
                            var container = document.getElementById('chatDetails');
                            container.innerHTML = html;

                            // Initialize all popovers within the newly added content
                            var popoverTriggerList = [].slice.call(container.querySelectorAll('[data-bs-toggle="popover"]'));
                            popoverTriggerList.forEach(function (popoverTriggerEl) {
                                new bootstrap.Popover(popoverTriggerEl);
                            });
                        })
                        .catch(error => console.error('Error loading the chat details:', error));
                }
            });
            // Trigger change event on page load
            dropdown.dispatchEvent(new Event('change'));
        });
    </script>
}
